<?xml version="1.0"?>
<project name="TicketAPI" default="main" basedir=".">
	<!-- 项目名称 -->
	<property name="project.name" value="Ticket"/>
	<!-- 打包jar文件名 -->
	<property name="jar.name" value="ticket_api.jar"/>
	<!-- 打包后的jar文件存放目录 -->
	<property name="dist.dir" value="dist"/>
	<!-- 编译的.class文件目录 -->
	<property name="build.dir" value="bin"/>
	<!-- 工程lib目录 -->
	<property name="lib.dir" value="lib"/>
	<!-- 源码目录 -->
	<property name="src.dir" value="src"/>
	<!-- 名称 -->
	<property name="component.name" value="Ticket System"/>
	<!-- 机构名称 -->
	<property name="component.vendor" value="The Software Foundation"/>
	<!-- 文件版本 -->
	<property name="component.version" value="1.0.0"/>
	<!-- Main-Class主程序入口 -->
	<property name="main.class" value="main.command.TicketBooking"/>
	<!-- 文档目录 -->
	<property name="doc.dir" value="doc" />

	<!--定义项目编译的时候,lib包的路径-->
	<path id="project.class.path">
		<!--<pathelement path=" " />-->
		<!--  lib.dir contains all jar files, in several subdirectories  -->
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean" description="清理">
		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<target name="compile" depends="clean" description="编译">
		<!-- fork="java$$javac.exe" -->
		<javac fork="true" target="1.6" encoding="utf-8" srcdir="${src.dir}" destdir="${build.dir}" includejavaruntime="false" includeantruntime="false">
			<!--给编译器指定编码，防止出现："警告： 编码 GBK 的不可映射字符"-->
			<compilerarg line="-encoding utf-8"/>
			<!-- 代码检查 -->
			<compilerarg value="-Xlint:unchecked"/>
			<!-- class路径,包含lib -->
			<classpath refid="project.class.path"/>
			<!-- 忽略test目录 -->
			<exclude name="**/test/*"/>
		</javac>
	</target>

	<target name="jar" depends="compile" description="打包jar和清单文件(MANIFEST.MF)">
		<!--  create a property containing all .jar files, prefix lib/, and seperated with a space  -->
		<pathconvert property="libs.project" pathsep=" ">
			<mapper>
				<chainedmapper>
					<!--  remove absolute path  -->
					<flattenmapper/>
					<!--  add lib/ prefix  -->
					<globmapper from="*" to="lib/*"/>
				</chainedmapper>
			</mapper>
			<path refid="project.class.path"/>
		</pathconvert>
		<!--  create the jar  -->
		<jar jarfile="${dist.dir}/${jar.name}" basedir="${build.dir}">
			<!--  define MANIFEST.MF  -->
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Main-Class" value="${main.class}"/>
				<!--<section name="common">-->
				<attribute name="Specification-Title" value="${component.name}"/>
				<attribute name="Specification-Vendor" value="${component.vendor}"/>
				<attribute name="Specification-Version" value="${component.version}"/>
				<!--
					<attribute name="Implementation-Title" value="${component.name}"/>
					<attribute name="Implementation-Version" value="${component.version} ${TODAY}"/>
					<attribute name="Implementation-Vendor" value="${component.vendor}"/>
				-->
				<!--</section>-->
				<!--  finally, use the magically generated libs path  -->
				<attribute name="Class-Path" value="${libs.project}"/>
			</manifest>
		</jar>
	</target>

	<target name="run" depends="jar" description="运行">
		<!-- 将jar文件复制到根目录 -->
		<copy file="${dist.dir}/${jar.name}" todir=".">
		</copy>
		<!-- <java jar="${dist.dir}/${jar.name}" fork="true"/> -->
		<java jar="${jar.name}" fork="true">
			<arg line="encoding=UTF-8"/>
		</java>
	</target>

	<!-- Generate the API HTML pages -->
	<target name="javadoc" description="Generate the Javadoc HTML pages.">
		<delete dir="${doc.dir}" />
		<mkdir dir="${doc.dir}" />
		<javadoc destdir="${doc.dir}" windowtitle="${project.name} Code Generator API" use="yes" linksource="yes" encoding="utf-8" charset="utf-8" docencoding="utf-8" splitindex="yes">
			<classpath refid="project.class.path"/>
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="com/**" />
				<include name="org/**" />
				<exclude name="**/*.xml" />
				<exclude name="**/*.properties" />
			</packageset>
		</javadoc>
	</target>

	<target name="main" depends="clean,jar" description="编译和打包" />
</project>